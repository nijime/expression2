@name Hovertank
@inputs Pod:entity CamAng:angle
@outputs Direction:vector Position:vector Angle:angle E:entity Active
@persist [E]:entity HoverHeight Speed TurnSpeed Drift Active
@model models/hunter/plates/plate3x3.mdl

interval(100)

if(first()) {
    Active = 1
    
    E = entity()
    E:setAlpha(0)
    
    E:setMass(50000)
    E:propGravity(0)
    
    Position = vec(0,0,50)
    
    
    HoverHeight = 150
    Speed = 150
    TurnSpeed = 1700
    Drift = 0.3
}

rangerFilter(array(E))
MainR = rangerOffset(HoverHeight, E:pos(), vec(0,0,-1))

FrontR = rangerOffset(HoverHeight+50, E:pos()+E:forward():setZ(0)*200, vec(0,0,-1))

BackR = rangerOffset(HoverHeight+50, E:pos()+E:forward():setZ(0)*-100, vec(0,0,-1))

Pitch = atan((FrontR:distance() - BackR:distance())/300)



Dri = Pod:driver()
W = Dri:keyForward()
A = Dri:keyLeft()
S = Dri:keyBack()
D = Dri:keyRight()

Direction = E:forward()
Angle = E:forward():toAngle()


if(MainR:hit()) {
    
    E:applyForce(-E:vel()*Drift*E:mass() + vec(0,0, (HoverHeight/3) - MainR:distance())*E:mass())
    
    E:applyTorque(-E:angVelVector()*10*E:mass() + vec((0-E:angles():roll()), -(E:angles():pitch() - Pitch), 0)*E:mass()*60)
    
} else {

    E:applyForce((-E:vel()*Drift*E:mass()):setZ(0) + vec(0,0, -10)*E:mass())

    E:applyTorque(-E:angVelVector()*5*E:mass())
}


if(Dri) {
    if(Dri:keyJump()) {
        E:applyForce(vec(0,0,100)*E:mass())
    }
    if(W | S) {
        
        E:applyForce(E:forward() * Speed * E:mass() * (W-S))
        
    }
    
    
    if(A | D) {
        
        E:applyForce(E:right() * Speed * E:mass() * (D-A))
        
    }
    
    local Yaw = Dri:eye():dot(E:forward())
    local Turn = abs(E:angles():yaw() - CamAng:yaw()) > 10 ? 1 : 0
    
    if(Turn) {
        E:applyTorque(-E:angVelVector()*12*E:mass() + vec(0,0, Yaw / abs(Yaw) ) * TurnSpeed * E:mass())
    } else {
        E:applyTorque(-E:angVelVector()*15*E:mass() + vec(0,0, Yaw*1000 ) * E:mass())
    }
}



if(first()) {
    function entity h(N) {
        return holoEntity(N)
    }
    
    S = 1
    
    holoCreate(1, E:toWorld(vec(0*S,-70*S,-5*S)), vec(1.7*S,17*S,0.8*S), ang(90,-90,0), vec(255,255,255), "hq_rcube")
    holoParent(1, E)
    
    #holoCreate(2, E:toWorld(vec(0*S,70*S,0*S)), vec(2*S,20*S,3*S), ang(90,-90,180), vec(255,255,255), "hq_dome")
    holoParent(2, E)
    
    holoCreate(3, E:toWorld(vec(0*S,70*S,-5*S)), vec(1.7*S,17*S,0.8*S), ang(90,-90,0), vec(255,255,255), "hq_rcube")
    holoParent(3, E)
    
    #holoCreate(4, E:toWorld(vec(0*S,70*S,0*S)), vec(2*S,20*S,1*S), ang(90,-90,0), vec(255,255,255), "hq_dome")
    holoParent(4, E)
    
    #holoCreate(5, E:toWorld(vec(40*S,65*S,0*S)), vec(1.5*S,3*S,2*S), ang(90,-90,0), vec(255,255,255), "hq_cylinder")
    #holoParent(5, E)
    
    #holoCreate(6, E:toWorld(vec(-65*S,63*S,0*S)), vec(1.5*S,3*S,2*S), ang(90,-90,0), vec(255,255,255), "hq_cylinder")
    #holoParent(6, E)
    
    holoCreate(7, E:toWorld(vec(40*S,-0*S,-5*S)), vec(1.5*S,3*S,12*S), ang(90,-90,0), vec(255,255,255), "hq_cylinder")
    holoParent(7, E)
    
    holoCreate(8, E:toWorld(vec(-65*S,-0*S,-5*S)), vec(1.5*S,3*S,12*S), ang(90,-90,0), vec(255,255,255), "hq_cylinder")
    holoParent(8, E)
    
    
    holoCreate(9, E:toWorld(vec(75*S,0*S,0*S)), vec(1.2*S,4.85*S,6.0*S), ang(90,0,90), vec(255,255,255), "hq_cylinder")
    holoParent(9, E)
    
    holoCreate(10, E:toWorld(vec(0*S,0*S,-3*S)), vec(12*S,12*S,1.2*S), ang(0,0,0), vec(255,255,255), "")
    holoParent(10, E)
    
    holoCreate(11, E:toWorld(vec(75*S,36*S,0*S)), vec(1.2*S,4.85*S,2.85*S), ang(90,0,-90), vec(255,255,255), "hq_dome")
    holoParent(11, E)
    
    holoCreate(12, E:toWorld(vec(75*S,-36*S,0*S)), vec(1.2*S,4.85*S,2.85*S), ang(90,0,90), vec(255,255,255), "hq_dome")
    holoParent(12, E)
    
    holoCreate(13, E:toWorld(vec(0*S,-55*S,0*S)), vec(1.2*S,2.85*S,12*S), ang(90,90,90), vec(255,255,255), "hq_cylinder")
    holoParent(13, E)
    
    holoCreate(14, E:toWorld(vec(0*S,55*S,0*S)), vec(1.2*S,2.85*S,12*S), ang(90,90,90), vec(255,255,255), "hq_cylinder")
    holoParent(14, E)
    
    holoCreate(15, E:toWorld(vec(50*S,55*S,4*S)), vec(3*S,1.0*S,1*S), ang(30,0,0), vec(255,255,255), "")
    holoParent(15, E)
    
    holoCreate(16, E:toWorld(vec(50*S,-55*S,4*S)), vec(3*S,1.0*S,1*S), ang(30,0,0), vec(255,255,255), "")
    holoParent(16, E)
    
    holoCreate(17, E:toWorld(vec(-50.5*S,-55*S,12.1*S)), vec(14.7*S,1.0*S,1*S), ang(0,0,0), vec(255,255,255), "")
    holoParent(17, E)
    
    holoCreate(18, E:toWorld(vec(-50.5*S,55*S,12.1*S)), vec(14.7*S,1.0*S,1*S), ang(0,0,0), vec(255,255,255), "")
    holoParent(18, E)
    
    holoCreate(19, E:toWorld(vec(30*S,-24*S,5*S)), vec(3*S,1.0*S,1*S), ang(30,0,0), vec(255,255,255), "")
    holoParent(19, E)
    
    holoCreate(20, E:toWorld(vec(30*S,24*S,5*S)), vec(3*S,1.0*S,1*S), ang(30,0,0), vec(255,255,255), "")
    holoParent(20, E)
}
